#!/bin/bash

###################################################################
## Monitoring Client
###################################################################

# Constants
###################################################################
ERROR_GENERIC=1
ERROR_ARGUMENTS=2

ERROR_STATUS_DEAD_WITH_PID=1
ERROR_STATUS_NOT_RUNNING=3

#CLAUDIA_DIR=/opt/claudia/tcloud-server-deployment/
CLAUDIA_DIR=/opt/claudia/ReportClient

# Function declarations
###################################################################
function status() {
	
	echo "Checking Monitor status";

	if [ -e logs/monitor.pid ]; then

		ps -ef | grep -v grep |grep $(cat logs/monitorDU.pid) &> /dev/null

		if [[ $? == 1 ]]; then
			exit $ERROR_STATUS_DEAD_WITH_PID;
		fi;
	else
		exit $ERROR_STATUS_NOT_RUNNING;
	fi
}

function start() {

	echo "Starting Monitor DiskUsage";

	if [ -e logs/monitorDU.pid ]; then

		ps -ef | grep -v grep | grep $(cat logs/monitorDU.pid) &> /dev/null

	fi

	nohup java -Djava.net.preferIPv4Stack=true -jar lib/reportClient-0.1.0.jar diskusage 2> logs/monitorDU-err.log > logs/monitorDU-out.log &
	
	echo $! > logs/monitorDU.pid
}

function stop() {

	echo "Stopping Monitor DiskUsage";

	if [ -e logs/monitorDU.pid ]; then

		ps -ef | grep -v grep |grep $(cat logs/monitorDU.pid)

		if [[ $? == 0 ]]; then
			echo "Terminating process"
			kill -9 `cat logs/monitorDU.pid` &> /dev/null	
		fi
		
		rm logs/monitorDU.pid &> /dev/null
	fi
}


# Script code
##################################################################

# Check that a Java Runtime Environment is in the PATH
WICH_RESULT=$(which java);
if [[ $? == 1 ]]; then

        echo -e "Java command not found. Check there is a Java Runtime Environment present, and the executable is in the PATH\n";

        exit $ERROR_GENERIC;
fi

# Depending on the arguments start, or stop the server
if [ $# -ne 1 ]; then

	echo -e "Starts or stop the Monitoring daemon: \n";
	echo -e "\t\t$0 {start|stop}\n";

	exit $ERROR_ARGUMENTS;
fi

# Run the Server class
cd $CLAUDIA_DIR;

if [[ $1 == "start" ]]; then

	start;

elif [[ $1 == "stop" ]]; then
	stop;
fi

exit 0;

#!/bin/bash

# Claudia Project
# http://claudia.morfeo-project.org
#
# (C) Copyright 2010 Telefonica Investigacion y Desarrollo
# S.A.Unipersonal (Telefonica I+D)
#
# See CREDITS file for info about members and contributors.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the Affero GNU General Public License (AGPL) as 
# published by the Free Software Foundation; either version 3 of the License, 
# or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the Affero GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# If you want to use this software an plan to distribute a
# proprietary application in any way, and you are not licensing and
# distributing your source code under AGPL, you probably need to
# purchase a commercial license of the product. Please contact
# claudia-support@lists.morfeo-project.org for more information.


# Useful function definition
#######################################################################################

function escape {
        export ESCAPED_STRING=$(echo $1|sed 's/\//\\\//g')
}

function setProp {
        echo -e "\t- Setting $1 = $2 into $3";
	escape $2
        sed s/"$1".*=.*$/"$1"="$ESCAPED_STRING"/ $3 > $3.b1;
        mv $3.b1 $3;
}

function getBits() {
        VAR=$1;
        ITER=128;
        COUNT=0;
        while true
          do
            PARCIAL_RESULT=$(($VAR & $ITER));

            if [[ $PARCIAL_RESULT != 0 ]]; then
                COUNT=$(($COUNT+1));
                ITER=$(($ITER>>1));
            else
                break;
            fi;
          done

        GLOBAL_RESULT=$COUNT;
}

function getMaskBits() {
        BYTE_LIST=$(echo $1 | tr "." "\n")
        ACTUAL_COUNT=0

        for x in $BYTE_LIST
        do
                getBits $x
                ACTUAL_COUNT=$(($ACTUAL_COUNT+$GLOBAL_RESULT));
        done

        GLOBAL_RESULT=$ACTUAL_COUNT
}

function getNetwork() {
        IP=$1;
        MASK=$2;

        declare -a IP_OCTETS
        declare -a MASK_OCTETS

        IP_OCTETS=(`echo ${IP//./ }`)
        MASK_OCTETS=(`echo ${MASK//./ }`)

        for i in `seq 0 3`;
        do
                IP_BYTE=${IP_OCTETS[$i]}
                MASK_BYTE=${MASK_OCTETS[$i]}

                if [ $i = 0 ]; then
                        RESULT_IP=$(($IP_BYTE & $MASK_BYTE))
                else
                        RESULT_IP=$RESULT_IP"."$(($IP_BYTE & $MASK_BYTE))
                fi
        done
        GLOBAL_RESULT=$RESULT_IP
}

function substituteMacros {

  cp $1 $1.tmp
  sed s/@PUBLIC_IP/"$PUBLIC_IP"/ $1.tmp > $1.tmp2
  mv $1.tmp2 $1.tmp
  sed s/@SECONDARY_INTERNAL_IP/"$SECONDARY_INTERNAL_IP"/ $1.tmp > $1.tmp2
  mv $1.tmp2 $1.tmp
  sed s/@INTERNAL_IP/"$INTERNAL_IP"/ $1.tmp > $1.tmp2
  mv $1.tmp2 $1.tmp
  sed s/@PUBLIC_MASK_BIT_NUMBER/"$PUBLIC_MASK_BIT_NUMBER"/ $1.tmp > $1.tmp2
  mv $1.tmp2 $1.tmp
  sed s/@PUBLIC_MASK/"$PUBLICA_MASK"/ $1.tmp > $1.tmp2
  mv $1.tmp2 $1.tmp
  sed s/@INTERNAL_MASK_BIT_NUMBER/"$INTERNAL_MASK_BIT_NUMBER"/ $1.tmp > $1.tmp2
  mv $1.tmp2 $1.tmp
  sed s/@INTERNAL_MASK/"$INTERNAL_MASK"/ $1.tmp > $1.tmp2
  mv $1.tmp2 $1.tmp
  sed s/@HOSTNAME/"$HOSTNAME"/ $1.tmp > $1.tmp2
  mv $1.tmp2 $1.tmp
  sed s/@PUBLIC_NETWORK/"$PUBLIC_NETWORK"/ $1.tmp > $1.tmp2
  mv $1.tmp2 $1.tmp
  sed s/@INTERNAL_NETWORK/"$INTERNAL_NETWORK"/ $1.tmp > $1.tmp2
  mv $1.tmp2 $1
}


# Initialization tasks
#######################################################################################

cd "`dirname $0`";
cd ..;

echo -e "* Creating directories\n";
CLAUDIA_CONF_FILE=conf/claudiaClient.properties

ENVIRONMENT_DISK=$(cat $CLAUDIA_CONF_FILE|grep claudia.environment.disk | awk -F = '{print $2}');
ENVIRONMENT_FOLDER=$(cat $CLAUDIA_CONF_FILE|grep claudia.environment.folder| awk -F = '{print $2}');

mkdir $ENVIRONMENT_FOLDER
mount $ENVIRONMENT_DISK $ENVIRONMENT_FOLDER

function getValue {
	AWK_PROGRAM=$(cat bin/awkProg |sed "s/@KPICHANNELNAME/$1/")
	GLOBAL_RESULT=$(xmllint -format $ENVIRONMENT_FOLDER/ovf-env.xml | awk "$AWK_PROGRAM")
	echo "Getting value $1: $GLOBAL_RESULT"
}

# Get the values from the environment file
#######################################################################################
echo -e "* Setting up environment\n";
getValue "ExternalIP"
PUBLIC_IP=$GLOBAL_RESULT

getValue "InternalIP"
INTERNAL_IP=$GLOBAL_RESULT

getValue "ExternalMask"
PUBLIC_MASK=$GLOBAL_RESULT

getMaskBits $PUBLIC_MASK
PUBLIC_MASK_BIT_NUMBER=$GLOBAL_RESULT

getValue "InternalMask"
INTERNAL_MASK=$GLOBAL_RESULT

getMaskBits $INTERNAL_MASK
INTERNAL_MASK_BIT_NUMBER=$GLOBAL_RESULT

getValue "Hostname"
HOSTNAME=$GLOBAL_RESULT

getValue "InternalSecondaryIP"
SECONDARY_INTERNAL_IP=$GLOBAL_RESULT

getNetwork $PUBLIC_IP $PUBLIC_MASK
PUBLIC_NETWORK=$GLOBAL_RESULT

getNetwork $INTERNAL_IP $INTERNAL_MASK
INTERNAL_NETWORK=$GLOBAL_RESULT
 
# Configure the network interfaces
#######################################################################################
echo -e "* Configuring interfaces\n";
cp conf/templateInterfaces tmpInterfaces
sed s/@DEV/"eth0"/ tmpInterfaces > tmpInterfaces.tmp
mv tmpInterfaces.tmp tmpInterfaces
sed s/@IP/"$PUBLIC_IP"/ tmpInterfaces > tmpInterfaces.tmp
mv tmpInterfaces.tmp tmpInterfaces
sed s/@NETMASK/"$PUBLIC_MASK"/ tmpInterfaces > tmpInterfaces.tmp
mv tmpInterfaces.tmp tmpInterfaces
sed s/@NETWORK/"$PUBLIC_NETWORK"/ tmpInterfaces > tmpInterfaces.tmp
mv tmpInterfaces.tmp tmpInterfaces
cat tmpInterfaces >> /etc/network/interfaces
rm tmpInterfaces

cp conf/templateInterfaces tmpInterfaces
sed s/@DEV/"eth1"/ tmpInterfaces > tmpInterfaces.tmp
mv tmpInterfaces.tmp tmpInterfaces
sed s/@IP/"$INTERNAL_IP"/ tmpInterfaces > tmpInterfaces.tmp
mv tmpInterfaces.tmp tmpInterfaces
sed s/@NETMASK/"$INTERNAL_MASK"/ tmpInterfaces > tmpInterfaces.tmp
mv tmpInterfaces.tmp tmpInterfaces
sed s/@NETWORK/"$INTERNAL_NETWORK"/ tmpInterfaces > tmpInterfaces.tmp
mv tmpInterfaces.tmp tmpInterfaces
cat tmpInterfaces >> /etc/network/interfaces
rm tmpInterfaces

ifup eth0
ifup eth1

cp conf/templateIptables tmpIptables
sed s/@INTERNAL_NETWORK/"$INTERNAL_NETWORK"/ tmpIptables > tmpIptables.tmp
mv tmpIptables.tmp tmpIptables
sed s/@INTERNAL_MASK_BIT_NUMBER/"$INTERNAL_MASK_BIT_NUMBER"/ tmpIptables > tmpIptables.tmp
mv tmpIptables.tmp tmpIptables

chmod +x tmpIptables
./tmpIptables

hostname $HOSTNAME

cp /etc/hostname /etc/hostname.back
sed s/@HOSTNAME/"$HOSTNAME"/ /etc/hostname.back > /etc/hostname.tmp
mv /etc/hostname.tmp /etc/hostname 

# Set up heartbeat and ldirector
#######################################################################################
substituteMacros bin/UpdateHostList
substituteMacros /etc/ha.d/ha.cf
substituteMacros /etc/ha.d/haresources
substituteMacros /etc/ha.d/ldirectord.cf

/etc/init.d/ldirectord start
chmod +x bin/UpdateHostList

# Set up the probes pointing to the SM
#######################################################################################
echo -e "* Creating actions program\n";
AWK_PROGRAM=$(cat bin/awkProg |sed "s/@KPICHANNELNAME/KPIChannel/")
KPI_CHANNEL=$(xmllint -format $ENVIRONMENT_FOLDER/ovf-env.xml | awk "$AWK_PROGRAM")

setProp rest.host $KPI_CHANNEL $CLAUDIA_CONF_FILE 

getValue "KPITimesUrl"
KPI_URL=$GLOBAL_RESULT

getValue "KPIName"
KPI_NAME=$GLOBAL_RESULT

wget $KPI_URL;
cat times |awk '{print $1":"$2":"$3":event(agent, @KPINAME, "$4")"}' | sed s/@KPINAME/$KPI_NAME/ > actions

